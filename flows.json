[
    {
        "id": "3f2da72f.995ab8",
        "type": "tab",
        "label": "Global",
        "disabled": false,
        "info": ""
    },
    {
        "id": "5f562f66.a301e",
        "type": "tab",
        "label": "blinky-lite-cam cube",
        "disabled": false,
        "info": ""
    },
    {
        "id": "c4285970.3276d8",
        "type": "tab",
        "label": "blinky-lite-cam web-app",
        "disabled": false,
        "info": ""
    },
    {
        "id": "f07e020c.d4d43",
        "type": "subflow",
        "name": "App NavBar",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 340,
                "y": 80,
                "wires": [
                    {
                        "id": "3ab766b1.558d9a",
                        "port": 0
                    }
                ]
            }
        ],
        "env": [],
        "color": "#DDAA99"
    },
    {
        "id": "188d93e1.8dcc1c",
        "type": "subflow",
        "name": "HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 40,
                "wires": [
                    {
                        "id": "1da6518.fb1b7af"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "8857082f.cfdaa8",
        "type": "subflow",
        "name": "App CSS",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 320,
                "y": 80,
                "wires": [
                    {
                        "id": "73f0aea6.1d002",
                        "port": 0
                    }
                ]
            }
        ],
        "env": []
    },
    {
        "id": "6a402d92.12d7c4",
        "type": "subflow",
        "name": "App HTML",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 60,
                "y": 80,
                "wires": [
                    {
                        "id": "b1fab3c6.1f34c"
                    }
                ]
            }
        ],
        "out": [],
        "env": []
    },
    {
        "id": "6ad7c930.1a06b8",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#097479",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#097479",
                    "edited": false
                },
                "page-titlebar-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#000000",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#0eb8c0",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#097479",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            }
        },
        "site": {
            "name": "Blinky-Lite-Tutorial",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "44b51478.9c022c",
        "type": "websocket-listener",
        "z": "",
        "path": "/websocket",
        "wholemsg": "false"
    },
    {
        "id": "144aea5f.fcbd96",
        "type": "JsonWebToken_config",
        "z": "",
        "name": "blinky-lite-core-jwt-key",
        "secret": "$(JWTKEYSECRET)"
    },
    {
        "id": "5902d0c0.241a6",
        "type": "file",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "appendNewline": true,
        "createDir": false,
        "overwriteFile": "true",
        "encoding": "none",
        "x": 1090,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "6eaa13e9.4147bc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "init 1 sec",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "1",
        "x": 100,
        "y": 340,
        "wires": [
            [
                "2635280b.22f548"
            ]
        ]
    },
    {
        "id": "163af492.5e952b",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "Init Settings",
        "filename": "",
        "format": "utf8",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 430,
        "y": 340,
        "wires": [
            [
                "53c95857.5f3d68"
            ]
        ]
    },
    {
        "id": "53c95857.5f3d68",
        "type": "json",
        "z": "5f562f66.a301e",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 630,
        "y": 340,
        "wires": [
            [
                "30f384ea.cf21fc"
            ]
        ]
    },
    {
        "id": "30f384ea.cf21fc",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Save initSettings in Memory",
        "func": "flow.set('device', msg.payload);\nflow.set('newSetting', 1);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 860,
        "y": 340,
        "wires": []
    },
    {
        "id": "9e954281.d9215",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var jsonPretty = JSON.stringify(msg.payload,null,2);\nvar filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: msg.payload, payload:jsonPretty, 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 910,
        "y": 140,
        "wires": [
            [
                "5902d0c0.241a6"
            ]
        ]
    },
    {
        "id": "7461da25.d86ac4",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Settings Alarm Scan",
        "func": "scalarAlarmScan(msg.payload, 'setting');\nflow.set('device', msg.payload); \nflow.set('newSetting', 1); \nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 720,
        "y": 140,
        "wires": [
            [
                "9e954281.d9215"
            ]
        ]
    },
    {
        "id": "9115ea87.0ca208",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Readings Alarm Scan",
        "func": "msg.payload.linkQuality.value     = global.get('linkQuality');\nmsg.payload.signalLevel.value     = global.get('signalLevel');\nscalarAlarmScan(msg.payload, 'reading');\nflow.set('device', msg.payload); \nmsg.topic = global.get('project') + '/' + flow.get('cubeInfo').deviceType + '/' + flow.get('cubeInfo').name + '/reading';\nreturn msg;\n\nfunction getActionArray(device, type, actionType)\n{\n    var actionArray = [];\n    var keys = Object.keys(device);\n    for (var ii = 0; ii < keys.length; ++ii)\n    {\n        if (device[keys[ii]].hasOwnProperty('type'))\n        {\n            if (device[keys[ii]].type == type)\n            {\n                if (device[keys[ii]].action == actionType)\n                {\n                    actionArray.push(device[keys[ii]]);\n                }\n            }\n        }\n    }\n    return actionArray;\n}\nfunction scalarAlarmScan(device, actionType)\n{\n    var actionArray = getActionArray(device, 'scalar', actionType);\n    if (actionArray.length > 0)\n    {\n        for (var ii = 0; ii < actionArray.length; ++ii)\n        {\n            actionArray[ii].alarm.value = 0;\n            if (!isNaN(actionArray[ii].value))\n            {\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.low)  actionArray[ii].alarm.value = 1;\n                if (actionArray[ii].value < actionArray[ii].alarm.limits.lolo) actionArray[ii].alarm.value = 3;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.high) actionArray[ii].alarm.value = 2;\n                if (actionArray[ii].value > actionArray[ii].alarm.limits.hihi) actionArray[ii].alarm.value = 4;\n            }\n        }\n    }\n}\n",
        "outputs": 1,
        "noerr": 0,
        "x": 960,
        "y": 520,
        "wires": [
            [
                "a3ff8e5.b79de7"
            ]
        ]
    },
    {
        "id": "6c15c07a.68169",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "cube-01 Settings In",
        "links": [
            "9e56a59.12b4158",
            "6d9f3651.5d58e8"
        ],
        "x": 35,
        "y": 200,
        "wires": [
            [
                "8fd42733.128c98"
            ]
        ]
    },
    {
        "id": "a3ff8e5.b79de7",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Split MQTT topic",
        "func": "var mqttArray = msg.topic.split('/');\nvar device = \n{\n    project     : mqttArray[0],\n    deviceType  : mqttArray[1],\n    name        : mqttArray[2],\n    prop        : mqttArray[3],\n};\nreturn {topic : msg.topic, payload:{topic:'readings', mqttDevice : device, payload:msg.payload}};",
        "outputs": 1,
        "noerr": 0,
        "x": 1190,
        "y": 520,
        "wires": [
            [
                "107beeed.934ed1"
            ]
        ]
    },
    {
        "id": "107beeed.934ed1",
        "type": "websocket out",
        "z": "5f562f66.a301e",
        "name": "/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 1390,
        "y": 520,
        "wires": []
    },
    {
        "id": "65c2a6ff.a7b8f8",
        "type": "link in",
        "z": "5f562f66.a301e",
        "name": "cube-01 to websocket",
        "links": [
            "c2b927f.87df7d8"
        ],
        "x": 1295,
        "y": 600,
        "wires": [
            [
                "107beeed.934ed1"
            ]
        ]
    },
    {
        "id": "3ab766b1.558d9a",
        "type": "template",
        "z": "f07e020c.d4d43",
        "name": "navBar",
        "field": "payload.navBar",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- navBar -->\n    <div class=\"jumbotron\" width=\"100%\">\n        <table width=\"100%\">\n            <tr>\n                <td style=\"text-align:left; vertical-align:middle;\"  width=\"20%\">\n                    <a href='https://www.blinky-lite.io/' target='_blank'>\n                        <img src=\"/img/BlinkyLogo.gif\" height=\"75px\"/>\n                    </a>                \n                </td>\n                <td width=\"60%\" style=\"text-align:center; vertical-align:middle;\">\n                    <h1 class=\"jumbotron-title big-text bold-text\">\n                        <img src=\"/img/{{{payload.navBarIcon}}}\" height=\"75px\" style=\"padding-right:20px;\"/><span>{{{payload.title}}}</span>\n                    </h1>\n                </td>\n                <td style=\"text-align:right; vertical-align:middle;\" width=\"20%\">\n                    <a href='/'><img src=\"/img/home.png\" height=\"75px\"/></a>\n                </td>\n            </tr>\n        </table>\n    </div>\n",
        "output": "str",
        "x": 200,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "4109bee6.c2294",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "HTML",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n{{{payload.head}}}\n  </head>\n  <body>\n{{{payload.navBar}}}\n{{{payload.html.websocket}}}\n{{{payload.body}}}\n{{{payload.foot}}}\n  </body>\n</html>",
        "output": "str",
        "x": 1150,
        "y": 40,
        "wires": [
            [
                "fd2bae7.8730f5"
            ]
        ]
    },
    {
        "id": "ed534f2d.ee021",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Foot",
        "field": "payload.foot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div id=\"acknowledgeDialog\" title=\"Acknowledge\" class='card'>\n        <p class='card-title' id='acknowledgeDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='acknowledgeDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"optionDialog\" title=\"Option\" class='card'>\n        <p class='card-title' id='optionDialogTitle'>Choice</p>\n        <div class='card-body'>\n            <p class='tableText' id='optionDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"messageDialog\" title=\"Message\" class='card'>\n        <p class='card-title' id='messageDialogTitle'>Warning</p>\n        <div class='card-body'>\n            <p class='tableText' id='messageDialogText'>Text</p>\n        </div>\n    </div>\n    <div id=\"loginDialog\" title=\"Login\" class='card'>\n        <div class='card-body'>\n            <table>\n                <tr>\n                    <td width=\"50%\" align=\"left\"><span class=\"tableText\">Password</span></td>\n                    <td width=\"50%\" align=\"right\"><input class=\"form-control tableText\" id=\"loginPassword\" type=\"password\" value=\"\" /></td>\n                </tr>\n           </table>\n        </div>\n    </div>    \n    <script src=\"/scripts/popper.js\"></script>\n    <script src=\"/scripts/bootstrap.js\"></script>",
        "output": "str",
        "x": 690,
        "y": 40,
        "wires": [
            [
                "20e2a34a.7be64c"
            ]
        ]
    },
    {
        "id": "91ca4a7b.9010f8",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Head",
        "field": "payload.head",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <meta charset=\"UTF-8\">\n    <link rel=\"icon\" href=\"/img/favicon.ico?v=4\" type=\"image/x-icon\"/>\n    <title>{{payload.title}}</title>\n    <link rel=\"stylesheet\" href=\"/css/bootstrap.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui.css\"/>\n    <link rel=\"stylesheet\" href=\"/jquery/jquery-ui-timepicker-addon.css\"/>\n    <script src=\"/jquery/jquery.js\"></script>\n    <script src=\"/jquery/jquery-ui.js\"></script>\n    <script src=\"/jquery/jquery-ui-timepicker-addon.js\"></script>\n    <script src=\"/scripts/plotly-latest.min.js\"></script>\n    <script src=\"/scripts/visDist/vis.js\"></script>\n    <style>\n{{{payload.css}}}\n    </style>\n    <script>\n{{{payload.utilityScripts}}}\n    </script>\n    <script>\n{{{payload.javascript}}}\n    </script>",
        "output": "str",
        "x": 570,
        "y": 40,
        "wires": [
            [
                "ed534f2d.ee021"
            ]
        ]
    },
    {
        "id": "fd2bae7.8730f5",
        "type": "http response",
        "z": "188d93e1.8dcc1c",
        "name": "",
        "statusCode": "",
        "headers": {},
        "x": 1270,
        "y": 40,
        "wires": []
    },
    {
        "id": "85f6e038.56c86",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "Utility Scripts",
        "field": "payload.utilityScripts",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "        var ws;\n        var userID = -1;\n        var useWebSocketsFlag = true;\n        var projectName = '{{{payload.projectname}}}';\n        var heartBeatImage = false;\n        var wsUri = '';\n\n        function useWebSockets(webSocketsFlag)\n        {\n            useWebSocketsFlag = webSocketsFlag;\n        }\n        function wsConnectC()\n        {\n            if (!useWebSocketsFlag)\n            {\n                return;\n            }\n            if (wsUri.length < 1)\n            {\n                var uri = window.location.href.split('://');\n                var wslead = 'ws://';\n                if (uri[0] == 'https') wslead = 'wss://';\n                var questionLocation = uri[1].indexOf('?');\n                if (questionLocation >= 0)\n                {\n                    uri[1] = uri[1].substring(0,questionLocation);\n//                    console.log(uri[1]);\n                }\n                if (uri[1].indexOf('/') < (uri[1].length - 1))\n                {\n                    wsUri = wslead + uri[1] + '/websocket';\n                }\n                else\n                {\n                    wsUri = wslead + uri[1] + 'websocket';\n                }\n            }\n            ws = new WebSocket(wsUri);\n            ws.onmessage = function(event)\n            {\n                onWebSocketMessage(JSON.parse(event.data));\n        \n            };\n            ws.onopen = function()\n            {\n                console.log(\"Websocket connected\");\n                $('#webSocketStatus').html('Open');\n                $('#reOpenWebSocketButton').hide();\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n                onWebSocketOpen();\n            };\n            ws.onclose = function()\n            {\n                console.log(\"Websocket closed\");\n                $('#webSocketStatus').html('Closed');\n                $('#reOpenWebSocketButton').show();\n                $('#webSocketStatusCard').show();\n                $('#webSocketStatusRow').css('padding-bottom','25px');\n                onWebSocketClose();\n            };\n        }\n        function sendWebSocketMessageObject(message)\n        {\n            ws.send(JSON.stringify(message));\n        }\n\n        function getRandomInt(max)\n        {\n          return Math.floor(Math.random() * Math.floor(max));\n        }\n        $( document ).ready(function()\n        {\n            loginDialog(\"close\");\n//            userID  = getRandomInt(32768);\n            userID  = {{{payload.userID}}};\n            if (!useWebSocketsFlag)\n            {\n                $('#webSocketStatusRow').css('padding-bottom','0px');\n                $('#webSocketStatusCard').hide();\n            }\n            wsConnectC();\n            onDocumentReady();\n        });\n        $( function() \n        {\n            $( \"#acknowledgeDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() { $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n            $( \"#messageDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:[]\n                });\n        } );\n        function optionDialog(headerText, title, text, buttonTexts, buttonFunctions)\n        {\n            var buttonDefinitions = [];\n            for (var ii = 0; ii < buttonTexts.length; ++ii)\n            {\n                buttonDefinitions[ii] = \n                    {\n                        text: buttonTexts[ii],\n                        click: buttonFunctions[ii],\n                        showText: false\n                    };\n            }\n            $( \"#optionDialog\" ).dialog( \"option\", \"title\", headerText );   \n            $( \"#optionDialog\" ).dialog( \"option\", \"buttons\", buttonDefinitions);\n            $( \"#optionDialogTitle\" ).html(title);\n            $( \"#optionDialogText\" ).html(text);\n            $( \"#optionDialog\" ).dialog( \"open\" );\n        }\n        $( function() \n        {\n            $( \"#optionDialog\" ).dialog(\n                {\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Ok\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                   ]\n                });\n        } );\n        function acknowledgeDialog(headerText, title, text)\n        {\n            $( \"#acknowledgeDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#acknowledgeDialogTitle\" ).html(title);\n            $( \"#acknowledgeDialogText\" ).html(text);\n            $( \"#acknowledgeDialog\" ).dialog( \"open\" );\n        }\n        function messageDialog(headerText, title, text)\n        {\n            $( \"#messageDialog\" ).dialog( \"option\", \"title\", headerText );    \n            $( \"#messageDialogTitle\" ).html(title);\n            $( \"#messageDialogText\" ).html(text);\n            $( \"#messageDialog\" ).dialog( \"open\" );\n        }\n        var jwtToken = '';\n        var loginCallback = null;\n        var loginCallbackInfo = null;\n        function checkLogin(callback, callbackInfo)\n        {\n            if (jwtToken.length > 0) return callback(callbackInfo);\n            loginDialog(\"open\", callback, callbackInfo);\n        }\n        function loadJwtToken(data)\n        {\n            if (data.token == null)\n            {\n                acknowledgeDialog('Error', 'Login', 'Denied');\n            }\n            else\n            {\n                jwtToken = data.token;\n                loginCallback(loginCallbackInfo);\n            }\n        }\n        function loginDialog(action, callback, callbackInfo) \n        {\n            $( \"#loginDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    500,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Login\",\n                            click: function() \n                            {\n                                ws.send(JSON.stringify(\n                                {\n                                    topic       : 'getJwtToken',\n                                    payload     : \n                                    {\n//                                        loginUser       : $('#loginUser').val(),\n                                        loginPassword   : $('#loginPassword').val()\n                                    },\n                                    'userID'    : userID,\n                                }));\n                                loginCallback = callback;\n                                loginCallbackInfo = callbackInfo;\n                                $( this ).dialog( \"close\" );\n                            },\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() {$( this ).dialog( \"close\" );},\n                            showText: false\n                        }\n                    ]\n                });\n            $( \"#loginDialog\" ).dialog(action);\n        }\n        function sendSettingToMqtt(mqttMessage)\n        {\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendSettingToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n        }\n        function heartbeat()\n        {\n            heartBeatImage = !heartBeatImage;\n            var heartBeatImageSrc = '/img/heartRed.png';\n            if (heartBeatImage) heartBeatImageSrc = '/img/heartPink.png';\n            $('#heartBeatID').attr('src',heartBeatImageSrc);\n        }\n",
        "output": "str",
        "x": 430,
        "y": 40,
        "wires": [
            [
                "91ca4a7b.9010f8"
            ]
        ]
    },
    {
        "id": "1da6518.fb1b7af",
        "type": "function",
        "z": "188d93e1.8dcc1c",
        "name": "Create userID",
        "func": "function getRandomInt(max)\n{\n  return Math.floor(Math.random() * Math.floor(max));\n}\nmsg.payload['userID'] = getRandomInt(32768);\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 180,
        "y": 40,
        "wires": [
            [
                "85f6e038.56c86"
            ]
        ]
    },
    {
        "id": "20e2a34a.7be64c",
        "type": "template",
        "z": "188d93e1.8dcc1c",
        "name": "html.websocket",
        "field": "payload.html.websocket",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- websocket status HTML -->\n    <div width=\"100%\">\n        <div class='row' id='webSocketStatusRow' style='padding-bottom: 0px;'>\n            <div class='col-md-12' align='center'>\n\n                <div class='card' id='webSocketStatusCard' >\n                    <p class='card-title'>Web Socket Status</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Websocket Status</span>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <button class='btn card-button btn-block big-text' id='reOpenWebSocketButton' onclick=\"wsConnectC()\">Re-open</button>\n                                    </td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='webSocketStatus' >Closed</span>\n                                   </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 840,
        "y": 40,
        "wires": [
            [
                "4109bee6.c2294"
            ]
        ]
    },
    {
        "id": "73f0aea6.1d002",
        "type": "template",
        "z": "8857082f.cfdaa8",
        "name": "CSS",
        "field": "payload.css",
        "fieldType": "msg",
        "format": "css",
        "syntax": "mustache",
        "template": "        :root \n        {\n          --color1: #415c71;\n          --color2: #547792;\n          --color3: #9eb5c7;\n          --color4: #c6c2bb;\n          --color5: #fdc300;\n          --big-text-size :300%;\n          --bold-text :900;\n          --vert-pad : 25px;\n          --horz-pad : 25px;\n        }\n        body \n        {\n          background-color: white !important;\n          padding-left:25px;\n          padding-right:25px;\n        }\n        \n        img \n        {\n          object-fit: contain;\n        }\n        a\n        {\n            color: white;\n        }\n        a:visited \n        { \n            color: var(--white);\n        }\n        a:hover \n        { \n            color: var(--color5);\n        }\n\n        .jumbotron \n        {\n          background-color: var(--color2) !important;\n          color: white;\n          padding-top:25px;\n          padding-bottom:25px;\n        }\n        .jumbotron-title\n        {\n          color:var(--color5);\n        }\n        .jumbotron-button\n        {\n          color: white;\n          background-color: var(--color1);\n       }\n        .card\n        {\n          background-color: var(--color2) !important;\n          text-align: center;\n        }\n        .card-body\n        {\n          background-color: var(--color3);;\n        }\n        .card-button\n        {\n          color: var(--color5) !important;\n          background-color: var(--color1) !important;\n          font-weight: bold;\n        }\n        .card-title\n        {\n          color: var(--color5);\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .danger-card\n        {\n          background-color: yellow !important;\n          text-align: center;\n        }\n        .danger-card-body\n        {\n          background-color: yellow;\n        }\n        .danger-card-button\n        {\n          color: yellow !important;\n          background-color: red !important;\n          font-weight: bold;\n        }\n        .danger-card-title\n        {\n          color: red;\n          font-weight: var(--bold-text);\n          font-size: var(--big-text-size);\n         }\n        .danger-card-text\n        {\n          color: white;\n          text-align: left;\n          font-size: var(--big-text-size);\n        }\n        .tableHeading\n        {\n          color:var(--container-title-color);\n        }\n        .tableText\n        {\n          color:var(--container-text-color);\n          font-size: var(--big-text-size);\n        }\n       .vert-pad\n        {\n            padding-top:var(--vert-pad);;\n            padding-bottom:var(--vert-pad);;\n        }\n        .horz-pad\n        {\n            padding-left:var(--horz-pad);;\n            padding-right:var(--horz-pad);;\n        }\n        .big-text\n        {\n            font-size: var(--big-text-size);\n        }\n        .bold-text\n        {\n            font-weight: var(--bold-text);\n        }\n        .ui-slider\n        {\n            height: 90px;\n            background-color: var(--color1) !important;\n        }\n        .ui-slider .ui-slider-handle \n        {\n            height: 100px;\n            width: 100px;\n            background-color: var(--color5) !important;\n        }\n        .ui-dialog-titlebar-close \n        {\n            visibility: hidden;\n        }\n        input.inputLarger\n        {\n            transform: scale(3);\n            margin: 1px;\n        }\n",
        "output": "str",
        "x": 190,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "b1fab3c6.1f34c",
        "type": "subflow:8857082f.cfdaa8",
        "z": "6a402d92.12d7c4",
        "x": 200,
        "y": 80,
        "wires": [
            [
                "e205aa81.b2b958"
            ]
        ]
    },
    {
        "id": "133517a3.6ba2b8",
        "type": "subflow:188d93e1.8dcc1c",
        "z": "6a402d92.12d7c4",
        "name": "",
        "x": 490,
        "y": 80,
        "wires": []
    },
    {
        "id": "e205aa81.b2b958",
        "type": "subflow:f07e020c.d4d43",
        "z": "6a402d92.12d7c4",
        "name": "",
        "env": [],
        "x": 350,
        "y": 80,
        "wires": [
            [
                "133517a3.6ba2b8"
            ]
        ]
    },
    {
        "id": "8f14813b.bcdfc",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "pm2 restart red",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 1000,
        "y": 260,
        "wires": [
            [],
            [],
            []
        ]
    },
    {
        "id": "960991fa.0fafe",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Check Restart Setting",
        "func": "if (msg.payload != 1) return null\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 260,
        "wires": [
            [
                "8f14813b.bcdfc"
            ]
        ]
    },
    {
        "id": "8fd42733.128c98",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter Websocket MQTT like message",
        "func": "var msg1 = null;\nvar msg2 = null\nvar mqttArray = msg.topic.split('/');\nif (mqttArray[3] == 'restartTray')\n{\n    msg2 = msg;\n}\nelse\n{\n    msg1 = msg;\n}\n\nreturn [msg1,msg2];",
        "outputs": 2,
        "noerr": 0,
        "x": 230,
        "y": 200,
        "wires": [
            [
                "6c43015c.a827c"
            ],
            [
                "225946b1.9e8b3a"
            ]
        ]
    },
    {
        "id": "9256d95.2ffee28",
        "type": "comment",
        "z": "5f562f66.a301e",
        "name": "Customization",
        "info": " - Buffer size on Teensy Output\n - rfcomm port\n - code in Create Readings\n - code in Create Settings\n - websocket URL",
        "x": 630,
        "y": 40,
        "wires": []
    },
    {
        "id": "c0eddd92.1b41",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "Init",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 90,
        "y": 40,
        "wires": [
            [
                "218e440b.fba8ac"
            ]
        ]
    },
    {
        "id": "218e440b.fba8ac",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Cube Custom Info",
        "func": "var cubeInfo = \n{\n    deviceType  : 'blinky-lite-cam',\n    name        : '01',\n};\nflow.set('cubeInfo', cubeInfo);\nreturn null;",
        "outputs": 0,
        "noerr": 0,
        "x": 370,
        "y": 40,
        "wires": []
    },
    {
        "id": "2635280b.22f548",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Make Pretty",
        "func": "var filename = flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.json';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 270,
        "y": 340,
        "wires": [
            [
                "163af492.5e952b"
            ]
        ]
    },
    {
        "id": "6c43015c.a827c",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 140,
        "wires": [
            [
                "7461da25.d86ac4"
            ]
        ]
    },
    {
        "id": "225946b1.9e8b3a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Filter MQTT",
        "func": "var mqttArray = msg.topic.split('/');\nif (mqttArray[0] != global.get('project')) return null;\nif (mqttArray[1] != flow.get('cubeInfo').deviceType) return null;\nif (mqttArray[2] != flow.get('cubeInfo').name) return null;\n\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "x": 510,
        "y": 260,
        "wires": [
            [
                "960991fa.0fafe"
            ]
        ]
    },
    {
        "id": "9e56a59.12b4158",
        "type": "link out",
        "z": "c4285970.3276d8",
        "name": "Settings Out",
        "links": [
            "6c15c07a.68169"
        ],
        "x": 1155,
        "y": 80,
        "wires": []
    },
    {
        "id": "c2b927f.87df7d8",
        "type": "link out",
        "z": "c4285970.3276d8",
        "name": "Token Check",
        "links": [
            "3a74e83e.288018",
            "65c2a6ff.a7b8f8"
        ],
        "x": 1155,
        "y": 120,
        "wires": []
    },
    {
        "id": "bb2bf17e.0eeb8",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Send Token",
        "func": "return {topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.userID, token: msg.token}};\n",
        "outputs": 1,
        "noerr": 0,
        "x": 970,
        "y": 160,
        "wires": [
            [
                "c2b927f.87df7d8"
            ]
        ]
    },
    {
        "id": "5da8e3d5.f40e0c",
        "type": "JsonWebToken",
        "z": "c4285970.3276d8",
        "name": "get Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 820,
        "y": 160,
        "wires": [
            [
                "bb2bf17e.0eeb8"
            ]
        ]
    },
    {
        "id": "8f2c12d3.cfba4",
        "type": "JsonWebToken",
        "z": "c4285970.3276d8",
        "name": "decrypt Token",
        "tokenconfig": "144aea5f.fcbd96",
        "x": 860,
        "y": 80,
        "wires": [
            [
                "179aeb8b.254ce4"
            ]
        ]
    },
    {
        "id": "179aeb8b.254ce4",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Check Token",
        "func": "if (Number(msg.token) == msg.userID)\n{\n    return [msg, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Success!', userID : msg.userID}}]\n}\nreturn [null, {topic : 'acknowledge', payload:{topic:'settingAcknowledge', payload: 'Bad token', userID : msg.userID}}];",
        "outputs": 2,
        "noerr": 0,
        "x": 1030,
        "y": 80,
        "wires": [
            [
                "9e56a59.12b4158"
            ],
            [
                "c2b927f.87df7d8"
            ]
        ]
    },
    {
        "id": "3868e942.844f96",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "sendSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 670,
        "y": 80,
        "wires": [
            [
                "8f2c12d3.cfba4"
            ]
        ]
    },
    {
        "id": "6255e89b.eda558",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "CheckLogin",
        "func": "if (global.get('settingsPassword') == 'NULL')\n{\n    return [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];    \n}\nif (msg.payload.payload.loginPassword != global.get('settingsPassword'))\n{\n    return [{topic:'getJwtToken', payload:{topic:'getJwtToken', userID:msg.payload.userID, token: null}}, null];\n}\nreturn [null, {topic:'getJwtToken',payload:msg.payload.userID, userID : msg.payload.userID}];",
        "outputs": 2,
        "noerr": 0,
        "x": 650,
        "y": 140,
        "wires": [
            [
                "c2b927f.87df7d8"
            ],
            [
                "5da8e3d5.f40e0c"
            ]
        ]
    },
    {
        "id": "d325c712.5eb1c8",
        "type": "switch",
        "z": "c4285970.3276d8",
        "name": "",
        "property": "payload.topic",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "sendSettingToMqtt",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "getJwtToken",
                "vt": "str"
            },
            {
                "t": "eq",
                "v": "sendTakeImageToMqtt",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 3,
        "x": 490,
        "y": 80,
        "wires": [
            [
                "3868e942.844f96"
            ],
            [
                "6255e89b.eda558"
            ],
            [
                "e0331b1d.cb6a08"
            ]
        ]
    },
    {
        "id": "c78198ee.1c5e38",
        "type": "json",
        "z": "c4285970.3276d8",
        "name": "",
        "property": "payload",
        "action": "",
        "pretty": false,
        "x": 370,
        "y": 80,
        "wires": [
            [
                "d325c712.5eb1c8"
            ]
        ]
    },
    {
        "id": "c43545a1.5deb28",
        "type": "websocket in",
        "z": "c4285970.3276d8",
        "name": "/websocket",
        "server": "44b51478.9c022c",
        "client": "",
        "x": 100,
        "y": 80,
        "wires": [
            [
                "c78198ee.1c5e38"
            ]
        ]
    },
    {
        "id": "71ce0943.81bf18",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "Set Name And Device Type",
        "func": "msg.payload['script'] = {};\nmsg.payload['script']['name'] = '01'\nmsg.payload['script']['deviceType'] = 'blinky-lite-cam';\nmsg.payload['script']['project'] = global.get('project');\nreturn msg;\n",
        "outputs": 1,
        "noerr": 0,
        "x": 400,
        "y": 380,
        "wires": [
            [
                "6533b535.454c4c"
            ]
        ]
    },
    {
        "id": "c76a9544.852e88",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "Set Title",
        "field": "payload.title",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "Blinky Lite Cam {{{payload.script.name}}}",
        "output": "str",
        "x": 340,
        "y": 460,
        "wires": [
            [
                "c98976c.3996888"
            ]
        ]
    },
    {
        "id": "f078068d.c90bc8",
        "type": "subflow:6a402d92.12d7c4",
        "z": "c4285970.3276d8",
        "name": "",
        "x": 1150,
        "y": 500,
        "wires": []
    },
    {
        "id": "c98976c.3996888",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.global",
        "field": "payload.script.global",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Global Javascript\n        var restfulDevice = \n        {\n            deviceType  : '{{{payload.script.deviceType}}}',\n            name        : '{{{payload.script.name}}}',\n            project     : '{{{payload.script.project}}}'\n        };\n        var mqttDevice = null;\n        var device = null;\n        var editingConfig = false;\n        var snapshotViewShowing = true;\n\n        var archiveRequestList = [];\n        var archiveList = [];\n\n        useWebSockets(true);\n        function onDocumentReady()\n        {\n            enableConfig(false);\n            $('#configCardBody').hide();\n            toggleSnapshotView();\n            $('#configCardBody').hide();\n            $('#takeSnapShotButton').prop(\"disabled\", true);\n        }\n        function onWebSocketOpen()\n        {\n        }\n        function onWebSocketClose()\n        {\n            \n        }\n        function onWebSocketMessage(msg)\n        {\n//            console.log(msg);\n            switch(msg.topic)\n            {\n                case 'readings':\n                    if (msg.mqttDevice.name == restfulDevice.name)\n                    {\n                        heartbeat();\n                        device = msg.payload;\n                        mqttDevice = msg.mqttDevice;\n                        updateDmaReadings();\n                    }\n                    break;\n                case 'getArchiveValues':\n                    if (msg.userID == userID)\n                    {\n                        if ((msg.payload.device.deviceType == restfulDevice.deviceType) && (msg.payload.device.name == restfulDevice.name) )\n                            putArchiveValues(msg.payload);\n                    }\n                    break;\n                case 'getJwtToken':\n                    if (msg.userID == userID) loadJwtToken(msg);\n                    break;\n                case 'settingAcknowledge':\n                    if (msg.userID == userID)\n                    {\n                        if (msg.payload != 'Success!') acknowledgeDialog('Acknowledge', 'Setting', msg.payload);\n                    }\n                    break;\n                default:\n                // code block\n            }\n        }\n// Update Readings Javascript\n        function updateDmaReadings()\n        {\n            $('#linkQualityId').text(device.linkQuality.value);\n            $('#signalLevelId').text(device.signalLevel.value);\n            $('#snapshotTimeStamp').text(new Date(device.timeStamp).toLocaleString('en-SE', { timeZone: 'Europe/Stockholm' }));\n            if (device.takeImage.value == 0)\n            {\n                $('#takeSnapShotButton').prop(\"disabled\", false);\n            }\n            else\n            {\n                $('#takeSnapShotButton').prop(\"disabled\", true);\n            }\n\n            if(!editingConfig)\n            {\n                $('#rotSelect').val(device.config.rot.value.toString());\n                $('#rotEnable').prop(\"checked\", device.config.rot.enabled);\n                $('#effectsSelect').val(device.config.ifx.value.toString());\n                $('#effectsEnable').prop(\"checked\", device.config.ifx.enabled);\n                $('#exposureSelect').val(device.config.ex.value.toString());\n                $('#exposureEnable').prop(\"checked\", device.config.ex.enabled);\n                $('#awbSelect').val(device.config.awb.value.toString());\n                $('#awbEnable').prop(\"checked\", device.config.awb.enabled);\n                $('#mmSelect').val(device.config.mm.value.toString());\n                $('#mmEnable').prop(\"checked\", device.config.mm.enabled);\n                $('#shValue').val(device.config.sh.value.toString());\n                $('#shEnable').prop(\"checked\", device.config.sh.enabled);\n                $('#coValue').val(device.config.co.value.toString());\n                $('#coEnable').prop(\"checked\", device.config.co.enabled);\n                $('#brValue').val(device.config.br.value.toString());\n                $('#brEnable').prop(\"checked\", device.config.br.enabled);\n                $('#saValue').val(device.config.sa.value.toString());\n                $('#saEnable').prop(\"checked\", device.config.sa.enabled);\n                $('#ISOValue').val(device.config.ISO.value.toString());\n                $('#ISOEnable').prop(\"checked\", device.config.ISO.enabled);\n                $('#evValue').val(device.config.ev.value.toString());\n                $('#evEnable').prop(\"checked\", device.config.ev.enabled);\n                $('#ssValue').val(device.config.ss.value.toString());\n                $('#ssEnable').prop(\"checked\", device.config.ss.enabled);\n                $('#cfxValue').val(device.config.cfx.value.toString());\n                $('#cfxEnable').prop(\"checked\", device.config.cfx.enabled);\n            }\n\n            \n            $('#raspistillImg').attr('src','img/raspistill/' + device.deviceType + '-' + device.name + '.jpg' +'?t=' + device.timeStamp.toString() );\n            $('#raspistillImgLink').attr('href','img/raspistill/' + device.deviceType + '-' + device.name + '.jpg' +'?t=' + device.timeStamp.toString() );\n\n        }\n        function enableConfig(enable)\n        {\n            $('#rotSelect').prop(\"disabled\", !enable);\n            $('#rotEnable').prop(\"disabled\", !enable);\n            $('#effectsSelect').prop(\"disabled\", !enable);\n            $('#effectsEnable').prop(\"disabled\", !enable);\n            $('#exposureSelect').prop(\"disabled\", !enable);\n            $('#exposureEnable').prop(\"disabled\", !enable);\n            $('#awbSelect').prop(\"disabled\", !enable);\n            $('#awbEnable').prop(\"disabled\", !enable);\n            $('#mmSelect').prop(\"disabled\", !enable);\n            $('#mmEnable').prop(\"disabled\", !enable);\n            $('#shValue').prop(\"disabled\", !enable);\n            $('#shEnable').prop(\"disabled\", !enable);\n            $('#coValue').prop(\"disabled\", !enable);\n            $('#coEnable').prop(\"disabled\", !enable);\n            $('#brValue').prop(\"disabled\", !enable);\n            $('#brEnable').prop(\"disabled\", !enable);\n            $('#saValue').prop(\"disabled\", !enable);\n            $('#saEnable').prop(\"disabled\", !enable);\n            $('#ISOValue').prop(\"disabled\", !enable);\n            $('#ISOEnable').prop(\"disabled\", !enable);\n            $('#evValue').prop(\"disabled\", !enable);\n            $('#evEnable').prop(\"disabled\", !enable);\n            $('#ssValue').prop(\"disabled\", !enable);\n            $('#ssEnable').prop(\"disabled\", !enable);\n            $('#cfxValue').prop(\"disabled\", !enable);\n            $('#cfxEnable').prop(\"disabled\", !enable);\n           if ( enable)\n            {\n                $('#editConfigButton').text('Stop Editing');\n                $('#configCardBody').show();\n            }\n            else\n            {\n                $('#editConfigButton').text('Configuration');\n                $('#configCardBody').hide();\n            }\n\n        }\n        function editConfig()\n        {\n            editingConfig = !editingConfig;\n            enableConfig(editingConfig);\n            if (!editingConfig)\n            {\n                device.config.rot.value = $('#rotSelect').val();\n                device.config.rot.enabled = $('#rotEnable').prop(\"checked\");\n                device.config.ifx.value = $('#effectsSelect').val();\n                device.config.ifx.enabled = $('#effectsEnable').prop(\"checked\");\n                device.config.ex.value = $('#exposureSelect').val();\n                device.config.ex.enabled = $('#exposureEnable').prop(\"checked\");\n                device.config.awb.value = $('#awbSelect').val();\n                device.config.awb.enabled = $('#awbEnable').prop(\"checked\");\n                device.config.mm.value = $('#mmSelect').val();\n                device.config.mm.enabled = $('#mmEnable').prop(\"checked\");\n                device.config.sh.value = Number($('#shValue').val());\n                device.config.sh.enabled = $('#shEnable').prop(\"checked\");\n                device.config.co.value = Number($('#coValue').val());\n                device.config.co.enabled = $('#coEnable').prop(\"checked\");\n                device.config.br.value = Number($('#brValue').val());\n                device.config.br.enabled = $('#brEnable').prop(\"checked\");\n                device.config.sa.value = Number($('#saValue').val());\n                device.config.sa.enabled = $('#saEnable').prop(\"checked\");\n                device.config.ISO.value = Number($('#ISOValue').val());\n                device.config.ISO.enabled = $('#ISOEnable').prop(\"checked\");\n                device.config.ev.value = Number($('#evValue').val());\n                device.config.ev.enabled = $('#evEnable').prop(\"checked\");\n                device.config.ss.value = Number($('#ssValue').val());\n                device.config.ss.enabled = $('#ssEnable').prop(\"checked\");\n                device.config.cfx.value = $('#cfxValue').val();\n                device.config.cfx.enabled = $('#cfxEnable').prop(\"checked\");\n\n                var mqttMessage = \n                {\n                    topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                    payload :  device\n                };\n                var socketMessage = \n                {\n                    topic       : 'sendSettingToMqtt',\n                    mqttMessage : mqttMessage,\n                    token       : jwtToken,\n                    userID      : userID\n                };\n                sendWebSocketMessageObject({topic : 'sendTakeImageToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n            }\n        }\n        function toggleSnapshotView()\n        {\n            snapshotViewShowing = !snapshotViewShowing;\n            if(snapshotViewShowing)\n            {\n                $('#snapshotCardBody').show();\n            }\n            else\n            {\n                $('#snapshotCardBody').hide();\n            }\n\n        }\n        function takeSnapShot()\n        {\n            device.takeImage.value = 1;\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            var socketMessage = \n            {\n                topic       : 'sendSettingToMqtt',\n                mqttMessage : mqttMessage,\n                token       : jwtToken,\n                userID      : userID\n            };\n            sendWebSocketMessageObject({topic : 'sendTakeImageToMqtt', mqttMessage : mqttMessage, token : jwtToken, userID : userID});\n            $('#takeSnapShotButton').prop(\"disabled\", true);\n            \n        }\n",
        "output": "str",
        "x": 670,
        "y": 380,
        "wires": [
            [
                "da5b4a1e.c62d78"
            ]
        ]
    },
    {
        "id": "c1034be9.37f0a8",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "javascript",
        "field": "payload.javascript",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "{{{payload.script.global}}}\n{{{{payload.script.editDevice}}}\n{{{payload.script.dangerZone}}}\n",
        "output": "str",
        "x": 660,
        "y": 500,
        "wires": [
            [
                "7fef0c19.4ed014"
            ]
        ]
    },
    {
        "id": "450b0136.7ccbd",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "body",
        "field": "payload.body",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "    <div width=\"100%\">\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.snapshot}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.config}}}\n            </div>\n        </div>\n        <div class='row' style='padding-bottom: 10px;'>\n            <div class='col-md-12' align='center'>\n{{{payload.html.wifimon}}}\n            </div>\n        </div>\n    </div>\n",
        "output": "str",
        "x": 970,
        "y": 500,
        "wires": [
            [
                "f078068d.c90bc8"
            ]
        ]
    },
    {
        "id": "e2fa40e5.9c393",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.dangerZone",
        "field": "payload.script.dangerZone",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// dangerZone JavaScript\n        function restartTray()\n        {\n            optionDialog('Danger! Will Robinson, Danger!', 'Restart Tray', 'This should not be done lightly', ['Reset Tray','Cancel'], [function (){restartTrayButtonPress();}, function (){$( \"#optionDialog\" ).dialog( \"close\" );}]);\n        }\n        function restartTrayButtonPress()\n        {\n            $( \"#optionDialog\" ).dialog( \"close\" );\n            var mqttMessage = \n            {\n                topic   : restfulDevice.project + '/' +  restfulDevice.deviceType + '/' +  restfulDevice.name + '/restartTray',\n                payload :  1\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 690,
        "y": 460,
        "wires": [
            [
                "c1034be9.37f0a8"
            ]
        ]
    },
    {
        "id": "45e607d2.0f0d38",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.dangerZone",
        "field": "payload.html.dangerZone",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "                <div class='danger-card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <p class='danger-card-title'>Danger Zone</p>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='danger-card-body' align=\"center\">\n                        <div class='row'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='100%' align=\"center\">\n                                        <button class='btn danger-card-button big-text' id=\"restartTrayButton\" onclick=\"restartTray()\" >Restart Tray</button>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 1010,
        "y": 460,
        "wires": [
            [
                "450b0136.7ccbd"
            ]
        ]
    },
    {
        "id": "d3b167fa.414fa8",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "PROJECT",
        "topic": "project",
        "payload": "PROJECT",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 110,
        "y": 80,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "8f82985c.1fa328",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "SETTINGSPASSWORD",
        "topic": "settingsPassword",
        "payload": "SETTINGSPASSWORD",
        "payloadType": "env",
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 150,
        "y": 140,
        "wires": [
            [
                "5497633f.4a758c"
            ]
        ]
    },
    {
        "id": "5497633f.4a758c",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Save global init",
        "func": "global.set(msg.topic,msg.payload);\nreturn msg;",
        "outputs": 0,
        "noerr": 0,
        "x": 360,
        "y": 100,
        "wires": []
    },
    {
        "id": "d162777.1380788",
        "type": "exec",
        "z": "3f2da72f.995ab8",
        "command": "iwconfig",
        "addpay": false,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "",
        "x": 280,
        "y": 220,
        "wires": [
            [
                "adf1efae.e4e0f"
            ],
            [],
            []
        ]
    },
    {
        "id": "77ae9cee.d460f4",
        "type": "inject",
        "z": "3f2da72f.995ab8",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "5",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "x": 120,
        "y": 220,
        "wires": [
            [
                "d162777.1380788"
            ]
        ]
    },
    {
        "id": "adf1efae.e4e0f",
        "type": "function",
        "z": "3f2da72f.995ab8",
        "name": "Get Signal Quality",
        "func": "var info = msg.payload;\nvar linkStartIndex  = info.indexOf('Link Quality=');\nvar levelStartIndex = info.indexOf('Signal level=');\nvar linkStopIndex   = info.indexOf('/70');\nvar levelStopIndex   = info.lastIndexOf('dBm');\nvar linkQuality = Number(info.substring(linkStartIndex + 13, linkStopIndex));\nvar signalLevel =  Number(info.substring(levelStartIndex + 13, levelStopIndex - 1));\nvar ssid = info.substring(info.indexOf('ESSID') + 7);\nssid = ssid.substring(0,ssid.indexOf('\"'));\nvar val = {linkQuality : linkQuality, signalLevel: signalLevel, ssid:ssid};\nglobal.set('linkQuality',linkQuality);\nglobal.set('signalLevel', signalLevel);\nglobal.set('ssid', ssid);\nreturn {topic :'test',payload : val};",
        "outputs": 1,
        "noerr": 0,
        "x": 460,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "70be1872.dfaf48",
        "type": "http in",
        "z": "c4285970.3276d8",
        "name": "/",
        "url": "/",
        "method": "get",
        "upload": false,
        "swaggerDoc": "",
        "x": 130,
        "y": 380,
        "wires": [
            [
                "71ce0943.81bf18"
            ]
        ]
    },
    {
        "id": "6533b535.454c4c",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "navBarIcon",
        "field": "payload.navBarIcon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "cameraYellow.png",
        "output": "str",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "c76a9544.852e88"
            ]
        ]
    },
    {
        "id": "7e45d4c8.e8a3cc",
        "type": "inject",
        "z": "5f562f66.a301e",
        "name": "",
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "repeat": "1",
        "crontab": "",
        "once": true,
        "onceDelay": "5",
        "x": 130,
        "y": 440,
        "wires": [
            [
                "4e5c46c5.5583d8"
            ]
        ]
    },
    {
        "id": "b6fcc866.328488",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.wifimon",
        "field": "payload.html.wifimon",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <p class='card-title'>WiFi Connection</p>\n                    <div class='card-body' align=\"center\">\n                        <div class='row'  style='padding-top: 0px;'>\n                            <table width='100%'>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Device Update</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <img src='/img/heartRed.png' id='heartBeatID' width='100px' height='100px'/>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Signal Level (dBm)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='signalLevelId' >-100</span>\n                                    </td>\n                                </tr>\n                                <tr>\n                                    <td width='60%' >\n                                        <span class='card-text' >Link Quality (/70)</span>\n                                    </td>\n                                    <td width='20%' align='center'></td>\n                                    <td width='20%' align='center'>\n                                        <span class='card-text' id='linkQualityId' >-1</span>\n                                    </td>\n                                </tr>\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 420,
        "wires": [
            [
                "45e607d2.0f0d38"
            ]
        ]
    },
    {
        "id": "84a9b3c6.82737",
        "type": "exec",
        "z": "5f562f66.a301e",
        "command": "raspistill",
        "addpay": true,
        "append": "",
        "useSpawn": "false",
        "timer": "",
        "oldrc": false,
        "name": "raspistill",
        "x": 580,
        "y": 400,
        "wires": [
            [
                "f8373209.33156"
            ],
            [],
            []
        ]
    },
    {
        "id": "4e5c46c5.5583d8",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Prep raspistill command",
        "func": "var imageMsg = null;\nvar noImageMsg = null;\nvar device = flow.get('device');\nvar cubeInfo = flow.get('cubeInfo');\nif (device.takeImage.value == 1)\n{\n    var cmd = ' -o html-static/img/raspistill/';\n    cmd = cmd + cubeInfo.deviceType + '-' + cubeInfo.name + '.jpg';\n    if (device.config.rot.enabled) cmd = cmd + ' -rot ' + device.config.rot.value.toString();\n    if (device.config.t.enabled)   cmd = cmd + ' -t '   + device.config.t.value.toString();\n    if (device.config.h.enabled)   cmd = cmd + ' -h '   + device.config.h.value.toString();\n    if (device.config.w.enabled)   cmd = cmd + ' -w '   + device.config.w.value.toString();\n    if (device.config.ifx.enabled) cmd = cmd + ' -ifx ' + device.config.ifx.value.toString();\n    if (device.config.ex.enabled)  cmd = cmd + ' -ex '  + device.config.ex.value.toString();\n    if (device.config.awb.enabled) cmd = cmd + ' -awb ' + device.config.awb.value.toString();\n    if (device.config.mm.enabled)  cmd = cmd + ' -mm '  + device.config.mm.value.toString();\n    if (device.config.sh.enabled)  cmd = cmd + ' -sh '  + device.config.sh.value.toString();\n    if (device.config.co.enabled)  cmd = cmd + ' -co '  + device.config.co.value.toString();\n    if (device.config.br.enabled)  cmd = cmd + ' -br '  + device.config.br.value.toString();\n    if (device.config.sa.enabled)  cmd = cmd + ' -sa '  + device.config.sa.value.toString();\n    if (device.config.ISO.enabled) cmd = cmd + ' -ISO ' + device.config.ISO.value.toString();\n    if (device.config.ev.enabled)  cmd = cmd + ' -ev '  + device.config.ev.value.toString();\n    if (device.config.ss.enabled)  cmd = cmd + ' -ss '  + device.config.ss.value.toString();\n    if (device.config.cfx.enabled) cmd = cmd + ' -cfx ' + device.config.cfx.value.toString();\n    imageMsg = {topic : 'takeImage', payload : cmd};\n}\nelse\n{\n    noImageMsg = {topic : 'noImage', payload : device};\n}\nreturn [imageMsg,noImageMsg];\n",
        "outputs": 2,
        "noerr": 0,
        "x": 330,
        "y": 440,
        "wires": [
            [
                "84a9b3c6.82737"
            ],
            [
                "1183f5a4.d5d21a"
            ]
        ]
    },
    {
        "id": "da5b4a1e.c62d78",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "script.editDevice",
        "field": "payload.script.editDevice",
        "fieldType": "msg",
        "format": "javascript",
        "syntax": "mustache",
        "template": "// Edit Temp JavaScript\n       $( function() \n        {\n            $( \"#editDeviceDialog\" ).dialog(\n                {\n//                    closeOnEscape: false,\n//                    open: function(event, ui) {$(\".ui-dialog-titlebar-close\", ui.dialog | ui).hide();},\n                    width:    640,\n                    autoOpen: false,\n                    buttons:\n                    [\n                        {\n                            text: \"Set\",\n                            click: function() {setDevice(); $( this ).dialog( \"close\" );},\n                            showText: false\n                        },\n                        {\n                            text: \"Cancel\",\n                            click: function() \n                            {\n                                $( this ).dialog( \"close\" ); \n                            },\n                            showText: false\n                        }\n                    ]\n                });\n        } );\n        function editDevice(attrName)\n        {\n            $( \"#editDeviceDialog\" ).dialog( \"option\", \"title\", \"Edit\"); \n            editedAttribute = attrName;\n            $( \"#editDeviceDialogAttribute\").html(attrName);\n\n            var attr = device[attrName];\n            $( \"#loloAlarm\").val(attr.alarm.limits.lolo);\n            $( \"#lowAlarm\").val(attr.alarm.limits.low);\n            $( \"#highAlarm\").val(attr.alarm.limits.high);\n            $( \"#hihiAlarm\").val(attr.alarm.limits.hihi);\n            $( \"#notifyName\").val(attr.alarm.notify.name);\n            $( \"#notifyNumber\").val(attr.alarm.notify.number);\n\n            $( \"#editDeviceDialog\" ).dialog( \"open\" );\n        }\n        function setDevice()\n        {\n            var attr = device[editedAttribute];\n            if (isNaN($('#loloAlarm').val()) \n                || isNaN($('#lowAlarm').val()) \n                || isNaN($('#highAlarm').val()) \n                || isNaN($('#hihiAlarm').val()))\n            {\n                acknowledgeDialog('Error', 'Entry not a number!', editedAttribute);\n                editedAttribute = '';\n                return;\n            }\n            editedAttribute = '';\n\n            attr.alarm.limits.lolo = Number($( \"#loloAlarm\").val());\n            attr.alarm.limits.low = Number($( \"#lowAlarm\").val());\n            attr.alarm.limits.high = Number($( \"#highAlarm\").val());\n            attr.alarm.limits.hihi = Number($( \"#hihiAlarm\").val());\n            attr.alarm.notify.number =  $( \"#notifyNumber\").val();\n            attr.alarm.notify.name = $( \"#notifyName\").val();\n            var mqttMessage = \n            {\n                topic   : mqttDevice.project + '/' +  mqttDevice.deviceType + '/' +  mqttDevice.name + '/setting',\n                payload :  device\n            };\n            checkLogin(sendSettingToMqtt, mqttMessage);\n        }\n",
        "output": "str",
        "x": 680,
        "y": 420,
        "wires": [
            [
                "e2fa40e5.9c393"
            ]
        ]
    },
    {
        "id": "7fef0c19.4ed014",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.snapshot",
        "field": "payload.html.snapshot",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <button class='btn btn-block card-button big-text' id=\"toggleSnapshotViewButton\" onclick=\"toggleSnapshotView()\" >Snapshot</button>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id='snapshotCardBody'>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <div class=\"container-fluid \" align=\"center\">\n                                <table width='800px'>\n                                    <tr>\n                                        <td>\n                                            <a href='img/raspistill/BlinkyLogo.png' target='_blank' id='raspistillImgLink' download>\n                                                <img src='img/raspistill/BlinkyLogo.png' id=\"raspistillImg\" width='800' height='600'/>\n                                            </a>\n                                        </td>\n                                    </tr>\n                                    <tr>\n                                        <td width='100%' align='center'>\n                                            <span  class='card-text' id='snapshotTimeStamp'>Blinky Time</span>\n                                        </td>\n                                    </tr>\n                                </table>\n                            </div>\n                        </div>\n                        <div class='row'>\n                            <div class='col-md-4'>\n                            </div>\n                            <div class='col-md-4'>\n                                <button class='btn btn-block card-button big-text' id=\"takeSnapShotButton\" onclick=\"takeSnapShot()\" >Snap</button>\n                             </div>\n                            <div class='col-md-4'>\n                            </div>\n                        </div>\n                   </div>\n                </div>\n",
        "output": "str",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "65eb2d40.d0fcd4"
            ]
        ]
    },
    {
        "id": "1183f5a4.d5d21a",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Retrieve Device",
        "func": "var newMsg = {topic:'device', payload:flow.get('device')};\nreturn newMsg;",
        "outputs": 1,
        "noerr": 0,
        "x": 760,
        "y": 520,
        "wires": [
            [
                "9115ea87.0ca208"
            ]
        ]
    },
    {
        "id": "6d9f3651.5d58e8",
        "type": "link out",
        "z": "c4285970.3276d8",
        "name": "TakeImageRequest",
        "links": [
            "6c15c07a.68169"
        ],
        "x": 835,
        "y": 200,
        "wires": []
    },
    {
        "id": "e0331b1d.cb6a08",
        "type": "function",
        "z": "c4285970.3276d8",
        "name": "sendImageSettingToMqtt",
        "func": "return {\n    topic   : msg.payload.mqttMessage.topic, \n    payload : msg.payload.mqttMessage.payload, \n    token   : msg.payload.token, \n    userID  : msg.payload.userID };\n",
        "outputs": 1,
        "noerr": 0,
        "x": 690,
        "y": 200,
        "wires": [
            [
                "6d9f3651.5d58e8"
            ]
        ]
    },
    {
        "id": "5940639.346419c",
        "type": "file in",
        "z": "5f562f66.a301e",
        "name": "File buffer",
        "filename": "",
        "format": "",
        "chunk": false,
        "sendError": false,
        "encoding": "none",
        "x": 1020,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "f8373209.33156",
        "type": "function",
        "z": "5f562f66.a301e",
        "name": "Get Image filename",
        "func": "device = flow.get('device');\ndevice.takeImage.value = 0;\ndevice.timeStamp = new Date().getTime();\nvar filename = 'html-static/img/raspistill/' + flow.get('cubeInfo').deviceType + '-' + flow.get('cubeInfo').name + '.jpg';\nreturn {topic: 'readFile', 'filename':filename};",
        "outputs": 1,
        "noerr": 0,
        "x": 830,
        "y": 400,
        "wires": [
            [
                "5940639.346419c",
                "1183f5a4.d5d21a"
            ]
        ]
    },
    {
        "id": "65eb2d40.d0fcd4",
        "type": "template",
        "z": "c4285970.3276d8",
        "name": "html.config",
        "field": "payload.html.config",
        "fieldType": "msg",
        "format": "html",
        "syntax": "mustache",
        "template": "<!-- Dashboard HTML -->\n                <div class='card'>\n                    <div class='row'>\n                        <div class='col-md-2'>\n                        </div>\n                        <div class='col-md-8'>\n                            <button class='btn btn-block card-button big-text' id=\"editConfigButton\" onclick=\"editConfig('')\" >Configuration</button>\n                         </div>\n                        <div class='col-md-2'>\n                        </div>\n                    </div>\n                    <div class='card-body' align=\"center\" id='configCardBody'>\n                        <div class='row' style='padding-bottom: 25px;'>\n                            <table width=\"100%\">\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Rotation</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"rotSelect\">\n                                          <option value=\"0\">0</option>\n                                          <option value=\"90\">90</option>\n                                          <option value=\"180\">180</option>\n                                          <option value=\"270\">270</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"rotEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Effects</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"effectsSelect\">\n                                            <option value=\"none\">none</option>\n                                            <option value=\"negative\">negative</option>\n                                            <option value=\"solarise\">solarise</option>\n                                            <option value=\"sketch\">sketch</option>\n                                            <option value=\"denoise\">denoise</option>\n                                            <option value=\"emboss\">emboss</option>\n                                            <option value=\"oilpaint\">oilpaint</option>\n                                            <option value=\"hatch\">hatch</option>\n                                            <option value=\"gpen\">gpen</option>\n                                            <option value=\"pastel\">pastel</option>\n                                            <option value=\"watercolour\">water colour</option>\n                                            <option value=\"film\">film</option>\n                                            <option value=\"blur\">blur</option>\n                                            <option value=\"saturation\">saturation</option>\n                                            <option value=\"colourswap\">colour swap</option>\n                                            <option value=\"washedout\">washed out</option>\n                                            <option value=\"posterise\">posterise</option>\n                                            <option value=\"colourpoint\">colour point</option>\n                                            <option value=\"colourbalance\">colour balance</option>\n                                            <option value=\"cartoon\">cartoon</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"effectsEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Exposure</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"exposureSelect\">\n                                            <option value=\"off\">off</option>\n                                            <option value=\"auto\">auto</option>\n                                            <option value=\"night\">night</option>\n                                            <option value=\"nightpreview\">nightpreview</option>\n                                            <option value=\"backlight\">backlight</option>\n                                            <option value=\"spotlight\">spotlight</option>\n                                            <option value=\"sports\">sports</option>\n                                            <option value=\"snow\">snow</option>\n                                            <option value=\"beach\">beach</option>\n                                            <option value=\"verylong\">verylong</option>\n                                            <option value=\"fixedfps\">fixedfps</option>\n                                            <option value=\"antishake\">antishake</option>\n                                            <option value=\"fireworks\">fireworks</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"exposureEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >AWB</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"awbSelect\">\n                                            <option value=\"off\">off</option>\n                                            <option value=\"auto\">auto</option>\n                                            <option value=\"sun\">sun</option>\n                                            <option value=\"cloud\">cloud</option>\n                                            <option value=\"shade\">shade</option>\n                                            <option value=\"tungsten\">tungsten</option>\n                                            <option value=\"fluorescent\">fluorescent</option>\n                                            <option value=\"incandescent\">incandescent</option>\n                                            <option value=\"flash\">flash</option>\n                                            <option value=\"horizon\">horizon</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"awbEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Meter Modes</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <select class=\"custom-select big-text\" style=\"height:70px;line-height:70px;\" id=\"mmSelect\">\n                                            <option value=\"average\">average</option>\n                                            <option value=\"spot\">spot</option>\n                                            <option value=\"backlit\">backlit</option>\n                                            <option value=\"matrix\">matrix</option>\n                                        </select>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"mmEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Sharpness</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"shValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"shEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Contrast</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"coValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"coEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Brightness</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"brValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"brEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Saturation</span>\n                                        <span >(-100 to 100)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"saValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"saEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >ISO</span>\n                                        <span >(100 to 800)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"ISOValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"ISOEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >EV-Comp</span>\n                                        <span >(-10 to 10)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"evValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"evEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Shutter Speed</span>\n                                        <span >(uS 0 to 60000)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"ssValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"ssEnable\"></td>\n                                </tr>\n                                <tr>\n                                    <td width='45%'>\n                                        <span class='card-text' >Color effect</span>\n                                        <span >(U:V)</span>\n                                    </td>\n                                    <td width='40%'>\n                                        <input id=\"cfxValue\" type=\"text\" value=\"0\" class=\"big-text\"  size=\"9\"/>\n                                    </td>\n                                    <td width=\"15%\" align=\"center\"><input type=\"checkbox\" class=\"inputLarger\" id=\"cfxEnable\"></td>\n                                </tr>\n\n                            </table>\n                        </div>\n                    </div>\n                </div>\n",
        "output": "str",
        "x": 990,
        "y": 380,
        "wires": [
            [
                "b6fcc866.328488"
            ]
        ]
    }
]